/*
* jquery.gmap
* Version 2.1.5 2013-10-30
*
* This is a jQuery plugin for Google Maps. It provides functionality for adding markers, centering the map, and clearing markers.
*
* Homepage: http://labs.mario.ec/jquery-gmap/
* Author: Mario Estrada <me@mario.ec>
* License: MIT
*/

(function($) { // Begin anonymous function with jQuery as a parameter

  $.fn.gMap = function(options, args) { // Define the gMap method for jQuery objects

    // Default options
    var defaults = {
      scrollwheel: true,
      doubleclickzoom: true,
      maptype: 'ROADMAP',
      zoom: 15,
      address: null,
      latitude: null,
      longitude: null,
      markers: [],
      icon: {
        image: 'http://labs.mario.ec/jquery-gmap/images/marker.png',
        iconsize: [20, 34],
        iconanchor: [10, 34],
        shadow: 'http://labs.mario.ec/jquery-gmap/images/marker-shadow.png',
        shadowsize: [37, 34],
        shadowanchor: [19, 34]
      }
    };

    // Merge the default options with the provided options
    var settings = $.extend({}, defaults, options);

    // Loop through each selected element
    return this.each(function() {
      var mapElement = this;

      // Create a new Google Maps map object
      var map = new google.maps.Map(mapElement);

      // Store the map object as data on the element
      $(mapElement).data('gMap.reference', map);

      // Create a new Google Maps geocoder object
      var geocoder = new google.maps.Geocoder();

      // If an address was provided, geocode it and center the map
      if (settings.address) {
        geocodeAddress(settings.address);
      }
      // If latitude and longitude were provided, center the map
      else if (settings.latitude && settings.longitude) {
        centerMap(settings.latitude, settings.longitude);
      }
      // If markers were provided, use the first one to center the map
      else if (settings.markers.length > 0) {
        var firstMarker = settings.markers[0];
        if (firstMarker.address) {
          geocodeAddress(firstMarker.address);
        } else {
          centerMap(firstMarker.latitude, firstMarker.longitude);
        }
      }
      // Default to a specific location if no other location data was provided
      else {
        centerMap(34.885931, 9.84375);
      }

      // Set the initial zoom level
      map.setZoom(settings.zoom);

      // Set the initial map type
      map.setMapTypeId(google.maps.MapTypeId[settings.maptype]);

      // Set the map options
      setMapOptions(map, settings);

      // Create a marker object for use as a default icon and shadow
      var defaultMarker = new google.maps.Marker();

      // Create a marker image object for the default icon
      var defaultIcon = new google.maps.MarkerImage(
        settings.icon.image,
        new google.maps.Size(settings.icon.iconsize[0], settings.icon.iconsize[1]),
        new google.maps.Point(settings.icon.iconanchor[0], settings.icon.iconanchor[1])
      );

      // Set the default icon for the marker object
      defaultMarker.setIcon(defaultIcon);

      // Create a marker image object for the default shadow
      var defaultShadow = settings.icon.shadow
        ? new google.maps.MarkerImage(
          settings.icon.shadow,
          new google.maps.Size(settings.icon.shadowsize[0], settings.icon.shadowsize[1]),
          new google.maps.Point(settings.icon.shadowanchor[0], settings.icon.shadowanchor[1])
        )
        : defaultMarker.getShadow();

      // Set the default shadow for the marker object
      defaultMarker.setShadow(defaultShadow);

      // Bind custom events for centering the map, clearing markers, and adding markers
      $(mapElement).on('gMap.centerAt', function(event, latitude, longitude, zoom) {
        if (zoom) {
          map.setZoom(zoom);
        }
        map.panTo(new google.maps.LatLng(latitude, longitude));
      });

      $(mapElement).on('gMap.clearMarkers', function() {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(null);
        }
        markers = [];
      });

      var markers = [];

      $(mapElement).on('gMap.addMarker', function(event, latitude, longitude, content, icon, popup) {
        var marker = new google.maps.Marker({
          position: new google.maps.LatLng(latitude, longitude)
        });

        if (icon) {
          var markerIcon = new google.maps.MarkerImage(
            icon.image,
            new google.maps.Size(icon.iconsize[0], icon.iconsize[1]),
            new google.
