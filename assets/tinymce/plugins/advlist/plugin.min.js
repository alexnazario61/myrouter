tinymce.PluginManager.add('advlist', function (editor) {
  function createListItems(listType, listStyles) {
    var items = [];
    tinymce.each(listStyles.split(/[ ,]/), function (style) {
      items.push({
        text: style.replace(/\-/g, " ").replace(/\b\w/g, function (letter) {
          return letter.toUpperCase();
        }),
        data: "" === style ? "default" : style
      });
    });
    return items;
  }

  function updateListStyle(listType, newListStyle) {
    editor.undoManager.transact(function () {
      var listElement = editor.dom.getParent(editor.selection.getNode(), "ol,ul");

      if (listElement && listElement.nodeName === listType) {
        editor.execCommand(listType === "OL" ? "InsertOrderedList" : "InsertUnorderedList");
      }

      var currentListStyle = editor.dom.getStyle(editor.dom.getParent(editor.selection.getNode(), "ol,ul"), "listStyleType") || "";
      updateListStyleUI(listType, currentListStyle);

      if (newListStyle) {
        editor.dom.setStyle(listElement, "listStyleType", newListStyle);
        listElement.removeAttribute("data-mce-style");
      }

      editor.focus();
    });
  }

  function updateListStyleUI(listType, currentListStyle) {
    var items = editor.control.items();

    items.each(function (item) {
      item.active(item.settings.data === currentListStyle);
    });
  }

  var numberedListStyles = createListItems("OL", editor.getParam("advlist_number_styles", "default,lower-alpha,lower-greek,lower-roman,upper-alpha,upper-roman")),
    bulletListStyles = createListItems("UL", editor.getParam("advlist_bullet_styles", "default,circle,dis
