tinymce.PluginManager.add("anchor", function(editor) {
  // Define an anonymous function to be executed when the anchor button is clicked
  function showDialog() {
    // Get the current selection node in the editor
    var selectionNode = editor.selection.getNode();
    // Initialize the anchor name variable as an empty string
    var anchorName = "";
    // Check if the selection node is an anchor tag and has an href attribute
    var isAnchorWithHref = ("A" === selectionNode.tagName && "" === editor.dom.getAttrib(selectionNode, "href"));
    // If the selection node is an anchor tag with an href attribute, set the anchor name to the node's name or id attribute value
    if (isAnchorWithHref) {
      anchorName = selectionNode.name || selectionNode.id || "";
    }
    // Open a window manager dialog with a text box for the user to input the anchor name
    editor.windowManager.open({
      title: "Anchor",
      body: {
        type: "textbox",
        name: "name",
        size: 40,
        label: "Name",
        value: anchorName
      },
      // Define a function to be executed when the user submits the dialog
      onsubmit: function(data) {
        // Get the anchor name from the dialog input
        var anchorName = data.data.name;
        // If the selection node is an anchor tag with an href attribute
        if (isAnchorWithHref) {
          // Set the id attribute of the selection node to the anchor name
          selectionNode.id = anchorName;
        } else {
          // Collapse the selection to the end of the anchor tag
          editor.selection.collapse(!0);
          // Insert a new anchor tag with the given id attribute
          editor.execCommand("mceInsertContent", !1, editor.dom.createHTML("a", { id: anchorName }));
        }
      }
    });
  }

  // Register the anchor command and button
  editor.addCommand("mceAnchor", showDialog);
  editor.addButton("anchor", {
    icon: "
