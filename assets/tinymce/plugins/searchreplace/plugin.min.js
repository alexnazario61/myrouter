!function() {
  // The `e` function is a helper function that returns the data content of a node
  function e(e) {
    return e && 1 === e.nodeType && "false" === e.contentEditable
      ? ""
      : e.nodeType === 3
      ? e.data
      : m[e.nodeName] && !h[e.nodeName]
      ? ""
      : h[e.nodeName] || p[e.nodeName]
      ? "\n"
      : s(e);
  }

  // The `t` function is a helper function that returns the indexes and matched content of a regular expression match
  function t(t, n, r, i, o) {
    function a(e, t) {
      if (t = t || 0, !e[0]) throw "findAndReplaceDOMText cannot handle zero-length matches";
      var n = e.index;
      if (t > 0) {
        var r = e[t];
        if (!r) throw "Invalid capture group";
        n += e[0].indexOf(r), e[0] = r;
      }
      return [n, n + e[0].length, [e[0]]];
    }

    // ... more code ...

  }

  // The `n` function is the main function that initializes the plugin
  function n(e) {
    // ... more code ...
  }

  // The `r` function is a helper function that returns the index of a node
  function r(e) {
    var t = e.getAttribute("data-mce-index");
    return "number" == typeof t ? "" + t : t;
  }

  // The `i` function is a helper function that highlights the matches of a search
  function i(e) {
    // ... more code ...
  }

  // The `o` function is a helper function that unhighlights the matches of a search
  function o(e) {
    // ... more code ...
  }

  // The `a` function is a helper function that returns an array of nodes that match a search
  function a(e) {
    // ... more code ...
  }

  // The `s` function is a helper function that selects the next or previous match of a search
  function s(e) {
    // ... more code ...
  }

  // The `l` function is a helper function that unhighlights a node
  function l(e) {
    // ... more code ...
  }

  // The `c` function is a helper function that checks if a node matches a search
  function c(e) {
    // ... more code ...
  }

  // Register the plugin with TinyMCE
  tinymce.PluginManager.add("searchreplace", n);
}();
