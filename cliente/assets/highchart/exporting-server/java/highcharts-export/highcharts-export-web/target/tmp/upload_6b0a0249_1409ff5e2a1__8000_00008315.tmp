<svg xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" xmlns="http://www.w3.org/2000/svg" width="600" height="400">
  <desc>Created with Highcharts 4</desc>
  <defs>
    <linearGradient x1="0" y1="0" x2="500" y2="500" gradientUnits="userSpaceOnUse" id="gradient">
      <stop offset="0" stop-color="rgb(255, 255, 255)" stop-opacity="1"></stop>
      <stop offset="1" stop-color="rgb(200, 200, 255)" stop-opacity="1"></stop>
    </linearGradient>
    <clipPath id="clip">
      <rect fill="none" x="0" y="0" width="527" height="332"></rect>
    </clipPath>
  </defs>
  <rect rx="5" ry="5" fill="url(#gradient)" x="0" y="0" width="600" height="400"></rect>
  <g class="highcharts-grid"></g>
  <g class="highcharts-grid">
    ${lines}
  </g>
  <g class="highcharts-axis">
    ${axisLines}
  </g>
  <g class="highcharts-axis">
    <text x="24.125" y="206" style="font-family: 'lucida grande', 'lucida sans unicode', verdana, arial, helvetica, sans-serif;font-size:12px;color:#4d759e;font-weight:bold;fill:#4d759e;" text-anchor="middle" transform="translate(0,0) rotate(270 24.125 206)" visibility="visible">
      <tspan x="24.125">Values</tspan>
    </text>
  </g>
  <g class="highcharts-series-group">
    <g class="highcharts-series" transform="translate(63,40) scale(1 1)" clip-path="url(#clip)">
      ${path}
    </g>
  </g>
  <text x="300" y="25" style="font-family: 'lucida grande', 'lucida sans unicode', verdana, arial, helvetica, sans-serif;font-size:16px;color:#274b6d;fill:#274b6d;width:536px;" text-anchor="middle" class="highcharts-title">
    <tspan x="300">Chart title</tspan>
  </text>
  ${legend}
  <g class="highcharts-axis-labels">
    ${xAxisLabels}
  </g>
  <g class="highcharts-axis-labels">
    ${yAxisLabels}
  </g>
</svg>


const lines = `
  ${Array.from({ length: 6 }, (_, i) => `
    <path fill="none" d="M 63 ${306.5 - 63 * i} L 590 ${306.5 - 63 * i}" stroke="#C0C0C0" stroke-width="1"  opacity="1"></path>
  `).join('')}
`.trim();

const axisLines = `
  ${Array.from({ length: 11 }, (_, i) => `
    <path fill="none" d="M ${106.5 + i * 47.5} 372 L ${106.5 + i * 47.5} 377" stroke="#C0D0E0" stroke-width="1" opacity="1"></path>
  `).join('')}
  <path fill="none" d="M 62.5 372 L 62.5 377" stroke="#C0D0E0" stroke-width="1"></path>
  <path fill="none" d="M 63 372.5 L 590 372.5" stroke="#C0D0E0" stroke-width="1"  visibility="visible"></path>
`.trim();

const path = `
  <path fill="none" d="M 21.958333333333332 292.2928 L 65.875 237.048 L 109.79166666666666 190.7008 L 153.70833333333334 160.4224 L 197.625 140.768 L 241.54166666666666 98.27199999999999 L 285.4583333333333 151.9232 L 329.37499999999994 134.792 L 373.29166666666663 44.620799999999974 L 417.2083333333333 74.23520000000002 L 461.12499999999994 205.0432 L 505.04166666666663 259.7568"
