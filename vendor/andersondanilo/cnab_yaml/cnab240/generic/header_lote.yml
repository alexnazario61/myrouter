# Registro Header de Lote - CNAB 240 - Caixa Econ√¥mica Federal

# Based on Caixa documentation available at:
# http://downloads.caixa.gov.br/_arquivos/cobrcaixasicob/manuaissicob/CNAB_240_SICOB.pdf
# (Accessed on 23/04/2014)

class Field:
    def __init__(self, pos, picture, default=None):
        self.pos = pos
        self.picture = picture
        self.default = default

class HeaderLote:
    codigo_banco = Field([1, 3], '9(3)', default='104')
    lote_servico = Field([4, 7], '9(4)', default='0001')
    tipo_registro = Field([8, 8], '9(1)', default='1')
    tipo_operacao = Field([9, 9], 'X(1)', default='R')
    tipo_servico = Field([10, 11], '9(2)', default='01')
    forma_lancamento = Field([12, 13], '9(2)', default='00')
    versao_layout_lote = Field([14, 16], '9(3)', default='030')
    uso_exclusivo_febraban_01 = Field([17, 17], 'X(1)', default='')
    codigo_inscricao = Field([18, 18], '9(1)')
    numero_inscricao = Field([19, 33], '9(15)')
    codigo_convenio = Field([34, 49], 'X(16)')
    uso_exclusivo_banco = Field([50, 53], 'X(4)', default='')
    agencia = Field([54, 58], '9(5)')
    agencia_dv = Field([59, 59], '9(1)')
    codigo_cedente = Field([60, 71], '9(12)')
    codigo_cedente_dv = Field([72, 72], '9(1)')
    agencia_mais_cedente_dv = Field([73, 73], '9(1)')
    nome_empresa = Field([74, 103], 'X(30)')
    mensagem_1 = Field([104, 143], 'X(40)', default='')
    mensagem_2 = Field([144, 183], 'X(40)', default='')
    numero_sequencial_arquivo = Field([184, 191], '9(8)')
    data_geracao = Field([192, 199], '9(8)', date_format='%d%m%Y')
    data_credito = Field([200, 207], '9(8)', date_format='%d%m%Y', default='0')
    uso_exclusivo_febraban_02 = Field([208, 240], 'X(33)', default='')

    @classmethod
    def from_dict(cls, data):
        return cls(**{k: v.format(data[k]) for k, v in cls.__dict__.items() if isinstance(v, Field)})

    def __init__(self, **kwargs):
        for name, field in self.__class__.__dict__.items():
            if isinstance(field, Field):
                setattr(self, name, kwargs.get(name, field.default))

    def __str__(self):
        return ''.join(getattr(self, k).replace('X', ' ').replace('9', f'{getattr(self, k)}') for k in self.__class__.__dict__ if isinstance(getattr(self.__class__, k), Field))


if __name__ == '__main__':
    data = {
        'codigo_inscricao': '1',
        'numero_inscricao': '12345678901',
        'codigo_convenio': '123456789012345',
        'agencia': '0001',
        'agencia_dv': '2',
        'codigo_cedente': '575',
        'codigo_cedente_dv': '4',
        'agencia_mais_cedente_dv': '8',
        'nome_empresa': 'Empresa Teste',
        'numero_sequencial_arquivo': '1',
        'data_geracao': '23042023',
    }

    header_lote = HeaderLote.from_dict(data)
    print(header_lote)
